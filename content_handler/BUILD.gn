# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

assert(is_fuchsia)

import("//build/vulkan/config.gni")

template("flutter_content_handler") {
  invoker_output_name = invoker.output_name
  extra_deps = invoker.extra_deps

  executable(target_name) {
    output_name = invoker_output_name

    defines = []

    libs = []

    sources = [
      "accessibility_bridge.cc",
      "accessibility_bridge.h",
      "app.cc",
      "app.h",
      "application_controller_impl.cc",
      "application_controller_impl.h",
      "main.cc",
      "rasterizer.cc",
      "rasterizer.h",
      "runtime_holder.cc",
      "runtime_holder.h",
      "service_protocol_hooks.cc",
      "service_protocol_hooks.h",
      "session_connection.cc",
      "session_connection.h",
      "vulkan_rasterizer.cc",
      "vulkan_rasterizer.h",
      "vulkan_surface.cc",
      "vulkan_surface.h",
      "vulkan_surface_pool.cc",
      "vulkan_surface_pool.h",
      "vulkan_surface_producer.cc",
      "vulkan_surface_producer.h",
    ]

    deps = [
             "//garnet/public/lib/app/cpp",
             "//garnet/public/lib/svc/cpp",
             "//garnet/public/lib/ui/flutter/sdk_ext",
             "//garnet/public/lib/ui/scenic:client",
             "//garnet/public/lib/ui/input/fidl",
             "//garnet/public/lib/ui/views/fidl",
             "//apps/maxwell/services/context",
             "//apps/modular/lib/rapidjson:rapidjson",
             "//dart/runtime/bin:libdart_builtin",
             "//dart/runtime/platform:libdart_platform",
             "//flutter/assets",
             "//flutter/common",
             "//flutter/flow",
             "//flutter/glue",
             "//flutter/lib/ui",
             "//flutter/runtime",
             "//flutter/sky/engine/platform",
             "//flutter/vulkan",
             "//garnet/public/dart-pkg/fuchsia",
             "//garnet/public/lib/fxl",
             "//garnet/public/lib/icu_data/cpp",
             "//garnet/public/lib/fsl",
             "//garnet/public/lib/zip",
             "//lib/tonic",
             "//magenta/system/ulib/trace-provider",
             "//magma:vulkan",
             "//third_party/rapidjson",
             "//third_party/skia",
           ] + extra_deps

    # The flags below are needed so that Dart's CPU profiler can walk the
    # C++ stack.
    cflags = [
      "-mno-omit-leaf-frame-pointer",
      "-fno-omit-frame-pointer",
    ]

    # This flag is needed so that the call to dladdr() in Dart's native symbol
    # resolver can report good symbol information for the CPU profiler.
    ldflags = [ "-rdynamic" ]
  }
}

flutter_content_handler("content_handler") {
  output_name = "flutter_runner"
  extra_deps = [ "//dart/runtime:libdart_jit" ]
}

flutter_content_handler("aot_content_handler") {
  output_name = "flutter_aot_runner"
  extra_deps = [ "//dart/runtime:libdart_precompiled_runtime" ]
}
